services:
  postgres:
    image: postgres:15
    container_name: auth_postgres
    environment:
      POSTGRES_DB: auth_system
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth_user -d auth_system"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - auth_network

  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: auth_app
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - auth_network
    command: >
      sh -c "
        echo 'Ожидание готовности базы данных...' &&
        sleep 10 &&
        echo 'Запуск миграций...' &&
        alembic upgrade head &&
        echo 'Заполнение тестовыми данными...' &&
        python init_test_data.py &&
        echo 'Запуск приложения...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

volumes:
  postgres_data:

networks:
  auth_network:
    driver: bridge
